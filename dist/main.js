(()=>{"use strict";var n={327:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 1s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        opacity: 0;\n    }\n\n    100% {\n        filter: blur(0px);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,4BAA4B;AAC7B;;AAEA;CACC;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC,qCAAqC;CACrC,4BAA4B;AAC7B;;AAEA;CACC;EACC,YAAY;CACb;AACD;;AAEA;CACC,6CAA6C;CAC7C,4BAA4B;AAC7B;;AAEA;CACC;EACC,iBAAiB;CAClB;AACD;;AAEA;IACI,6CAA6C;AACjD;;AAEA;IACI,gDAAgD;AACpD;;;AAGA;IACI;QACI,4BAA4B;QAC5B,sCAAsC;IAC1C;AACJ;;AAEA;IACI;QACI,4BAA4B;IAChC;AACJ;;AAEA;IACI;QACI,iBAAiB;QACjB,UAAU;IACd;;IAEA;QACI,iBAAiB;QACjB,YAAY;IAChB;AACJ;;AAEA;IACI;QACI,iBAAiB;QACjB,YAAY;IAChB;;IAEA;QACI,iBAAiB;QACjB,UAAU;IACd;AACJ;;;AAGA;IACI,qDAAqD;CACxD,gDAAgD;AACjD;;AAEA;CACC,6CAA6C;IAC1C,oDAAoD;AACxD;;AAEA;CACC;EACC,qBAAqB;EACrB,0BAA0B;CAC3B;AACD;;AAEA;CACC;EACC,0BAA0B;CAC3B;CACA;EACC,mBAAmB;EACnB,uBAAuB;CACxB;AACD",sourcesContent:[".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}\n\n.fadeIn {\n    animation: fadeInAnimation 1s linear forwards;\n}\n\n.fadeOut {\n    animation: fadeOutAnimation 0.5s linear forwards;\n}\n\n\n@keyframes fadeBlackAnimation {\n    100% {\n        color: var(--fontColorLight);\n        background-color: var(--fontColorDark);\n    }\n}\n\n@keyframes bounceAnimation {\n    100% {\n        margin-top: var(--paddingSm);\n    }\n}\n\n@keyframes fadeInAnimation {\n    0% {\n        filter: blur(2px);\n        opacity: 0;\n    }\n\n    100% {\n        filter: blur(0px);\n        opacity: 1.0;\n    }\n}\n\n@keyframes fadeOutAnimation {\n    0% {\n        filter: blur(0px);\n        opacity: 1.0;\n    }\n\n    100% {\n        filter: blur(2px);\n        opacity: 0;\n    }\n}\n\n\n.slideOut {\n    /*animation: slideOutAnimation 0.7s linear forwards;*/\n\tanimation: fadeOutAnimation 0.3s linear forwards;\n}\n\n.slideIn {\n\tanimation: fadeInAnimation 1s linear forwards;\n    /*animation: slideInAnimation 1.0s linear forwards;*/\n}\n\n@keyframes slideOutAnimation {\n\t100% {\n\t\tfilter: contrast(1.3);\n\t\ttransform: translate(100%);\n\t}\n}\n\n@keyframes slideInAnimation{\n\t0% {\n\t\ttransform: translate(100%);\n\t}\n\t100% {\n\t\tfilter: contrast(1);\n\t\ttransform: translate(0);\n\t}\n}"],sourceRoot:""}]);const A=r},20:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,qCAAqC;AACzC",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}"],sourceRoot:""}]);const A=r},176:(n,e,t)=>{t.d(e,{Z:()=>l});var a=t(537),i=t.n(a),o=t(645),r=t.n(o),A=t(20),s=t(327),d=t(300),c=r()(i());c.i(A.Z),c.i(s.Z),c.i(d.Z),c.push([n.id,":root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: rgb(54, 55, 64);\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(54, 55, 64);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--medRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,iBAAiB;CACjB,iBAAiB;CACjB,kBAAkB;CAClB,iBAAiB;;CAEjB,4BAA4B;;CAE5B,qBAAqB;CACrB,iBAAiB;;CAEjB,+BAA+B;CAC/B,+BAA+B;CAC/B,+BAA+B;CAC/B,+BAA+B;CAC/B,kCAAkC;;CAElC,8BAA8B;CAC9B,iBAAiB;;CAEjB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,kEAAkE;CAClE,8BAA8B;CAC9B,mBAAmB;;CAEnB,qDAAqD;;CAErD,8EAA8E;CAC9E,0FAA0F;CAC1F,iFAAiF;;CAEjF,0CAA0C;AAC3C",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: rgb(54, 55, 64);\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(54, 55, 64);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0, 0, 0, 0.5);\n\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--medRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: rgba(255, 255, 255, 0.16) 0px 1px 3px, rgba(255, 255, 255, 0.23) 0px 1px 3px;\n\t--shadowBox3: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\n\n\t--textShadow1: 2px 2px 3px rgba(0,0,0,0.8);\n}'],sourceRoot:""}]);const l=c},300:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;;;AAIA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD;;;AAGA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n"],sourceRoot:""}]);const A=r},716:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,"#content > #aboutDiv {\n    display: flex;\n    flex-direction: column;\n    color: var(--fontLight);\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#content > #aboutDiv > div {\n    width: clamp(300px, 50%, 100%);\n    padding: var(--smPadding) var(--lgPadding) var(--lgPadding);\n    background-color: orangered;\n    box-shadow: var(--shadowBox3);\n    display: flex;\n    flex-direction: column;\n    z-index: -1;\n}\n\n#content > #aboutDiv > div > #mainHeaderWrapper {\n    align-self: center;\n    width: fit-content;\n}\n\n#content > #aboutDiv > div > #mainHeaderWrapper > #mainHeader {\n    font-style: italic;\n    text-align: center;\n    text-shadow: var(--textShadow1);\n}\n\n#content > #aboutDiv > div > a > img {\n    width: clamp(250px, 35%, 900px);\n    margin: 0 var(--smPadding) var(--medPadding);\n    height: fit-content;\n    filter: contrast(1.25);\n    box-shadow: var(--shadowBox3);\n    float: left;\n}\n\n#content > #aboutDiv > div > a {\n    float: right;\n}\n\n","",{version:3,sources:["webpack://./src/css/Pages/about.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,2BAA2B;IAC3B,mBAAmB;AACvB;;AAEA;IACI,8BAA8B;IAC9B,2DAA2D;IAC3D,2BAA2B;IAC3B,6BAA6B;IAC7B,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,+BAA+B;AACnC;;AAEA;IACI,+BAA+B;IAC/B,4CAA4C;IAC5C,mBAAmB;IACnB,sBAAsB;IACtB,6BAA6B;IAC7B,WAAW;AACf;;AAEA;IACI,YAAY;AAChB",sourcesContent:["#content > #aboutDiv {\n    display: flex;\n    flex-direction: column;\n    color: var(--fontLight);\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#content > #aboutDiv > div {\n    width: clamp(300px, 50%, 100%);\n    padding: var(--smPadding) var(--lgPadding) var(--lgPadding);\n    background-color: orangered;\n    box-shadow: var(--shadowBox3);\n    display: flex;\n    flex-direction: column;\n    z-index: -1;\n}\n\n#content > #aboutDiv > div > #mainHeaderWrapper {\n    align-self: center;\n    width: fit-content;\n}\n\n#content > #aboutDiv > div > #mainHeaderWrapper > #mainHeader {\n    font-style: italic;\n    text-align: center;\n    text-shadow: var(--textShadow1);\n}\n\n#content > #aboutDiv > div > a > img {\n    width: clamp(250px, 35%, 900px);\n    margin: 0 var(--smPadding) var(--medPadding);\n    height: fit-content;\n    filter: contrast(1.25);\n    box-shadow: var(--shadowBox3);\n    float: left;\n}\n\n#content > #aboutDiv > div > a {\n    float: right;\n}\n\n"],sourceRoot:""}]);const A=r},917:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,"#content > #homeDiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: orangered;\n    text-align: center;\n}\n\n#content > #homeDiv > * {\n    margin: 0;\n}\n\n#content > #homeDiv > #topHeader {\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n    margin-bottom: var(--lgPadding);  \n}\n\n#content > #homeDiv > #topHeader,\n#content > #homeDiv > #middleHeader,\n#content > #homeDiv > #orderButton {\n    \n} \n#content > #homeDiv > #orderButton {\n    padding: var(--xSmPadding) var(--smPadding);\n    margin-top: var(--smPadding);\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n}\n\n#content > #homeDiv > #orderButton:hover{\n    animation: invertColorAnimation 0.2s forwards;\n}","",{version:3,sources:["webpack://./src/css/Pages/home.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,sCAAsC;IACtC,8CAA8C;IAC9C,+BAA+B;AACnC;;AAEA;;;;AAIA;AACA;IACI,2CAA2C;IAC3C,4BAA4B;IAC5B,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,6CAA6C;AACjD",sourcesContent:["#content > #homeDiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: orangered;\n    text-align: center;\n}\n\n#content > #homeDiv > * {\n    margin: 0;\n}\n\n#content > #homeDiv > #topHeader {\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n    margin-bottom: var(--lgPadding);  \n}\n\n#content > #homeDiv > #topHeader,\n#content > #homeDiv > #middleHeader,\n#content > #homeDiv > #orderButton {\n    \n} \n#content > #homeDiv > #orderButton {\n    padding: var(--xSmPadding) var(--smPadding);\n    margin-top: var(--smPadding);\n    border-radius: var(--roundBorder);\n    border-color: transparent;\n}\n\n#content > #homeDiv > #orderButton:hover{\n    animation: invertColorAnimation 0.2s forwards;\n}"],sourceRoot:""}]);const A=r},903:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),i=t.n(a),o=t(645),r=t.n(o)()(i());r.push([n.id,"#content > #menuDiv {\n    /*display: inline-flex;\n    flex-wrap: wrap;\n    padding: 0 var(--medPadding);\n    color: var(--fontLight);\n    justify-content: center;*/\n\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    color: var(--fontLight);\n    gap: var(--smPadding);\n}\n\n#content > #menuDiv > .typeDiv {\n    background-color: var(--accentColor1);\n    border-radius: var(--roundBorder);\n    height: fit-content;\n    display: flex;\n    flex-direction: column;\n    gap: var(--smPadding);\n    padding: var(--medPadding);\n    box-shadow: var(--shadowBox1);\n}\n\n#content > #menuDiv > .typeDiv >  .menuTypeHeader {\n    text-align: center;\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv {\n    background-color: var(--accentColor5);\n    width: calc(100% - var(--medPadding));\n    display: flex;\n    flex-direction: column;\n    padding: var(--smPadding);\n    \n}\n#content > #menuDiv > .typeDiv > .foodItemDiv > *,\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv > * {\n    margin: 0;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv > .foodPrice {\n    margin-left: auto;\n    justify-self: flex-end;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > details > .foodDescr {\n    font-style: italic;\n    margin-top: var(--xSmPadding);\n    font-size:smaller;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > details > img {\n    max-width: 100%;\n    height: auto;\n}","",{version:3,sources:["webpack://./src/css/Pages/menu.css"],names:[],mappings:"AAAA;IACI;;;;6BAIyB;;IAEzB,aAAa;IACb,2DAA2D;IAC3D,uBAAuB;IACvB,qBAAqB;AACzB;;AAEA;IACI,qCAAqC;IACrC,iCAAiC;IACjC,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,qBAAqB;IACrB,0BAA0B;IAC1B,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,sCAAsC;IACtC,8CAA8C;AAClD;;AAEA;IACI,qCAAqC;IACrC,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,yBAAyB;;AAE7B;AACA;;IAEI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB",sourcesContent:["#content > #menuDiv {\n    /*display: inline-flex;\n    flex-wrap: wrap;\n    padding: 0 var(--medPadding);\n    color: var(--fontLight);\n    justify-content: center;*/\n\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    color: var(--fontLight);\n    gap: var(--smPadding);\n}\n\n#content > #menuDiv > .typeDiv {\n    background-color: var(--accentColor1);\n    border-radius: var(--roundBorder);\n    height: fit-content;\n    display: flex;\n    flex-direction: column;\n    gap: var(--smPadding);\n    padding: var(--medPadding);\n    box-shadow: var(--shadowBox1);\n}\n\n#content > #menuDiv > .typeDiv >  .menuTypeHeader {\n    text-align: center;\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv {\n    background-color: var(--accentColor5);\n    width: calc(100% - var(--medPadding));\n    display: flex;\n    flex-direction: column;\n    padding: var(--smPadding);\n    \n}\n#content > #menuDiv > .typeDiv > .foodItemDiv > *,\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv > * {\n    margin: 0;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > .namePriceDiv > .foodPrice {\n    margin-left: auto;\n    justify-self: flex-end;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > details > .foodDescr {\n    font-style: italic;\n    margin-top: var(--xSmPadding);\n    font-size:smaller;\n}\n\n#content > #menuDiv > .typeDiv > .foodItemDiv > details > img {\n    max-width: 100%;\n    height: auto;\n}"],sourceRoot:""}]);const A=r},457:(n,e,t)=>{t.d(e,{Z:()=>m});var a=t(537),i=t.n(a),o=t(645),r=t.n(o),A=t(667),s=t.n(A),d=new URL(t(702),t.b),c=r()(i()),l=s()(d);c.push([n.id,"#content > #navHeaderDiv {\n    /*position: sticky;*/\n    width: 100%;\n    padding: 0 var(--medPadding);\n    color: var(--fontLight);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor1);\n    border: var(--xSmBorder) solid var(--accentColor3);\n    transition: 0.2s;\n    box-shadow: var(--shadowBox1);\n}\n\n#content > #navHeaderDiv > h3 {\n    margin-bottom: calc(-1 * var(--medPadding));\n    text-align: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div {\n    display: flex;\n    flex-direction: row;\n    align-content: flex-end;\n}\n\n\n#content > #navHeaderDiv > div > #navLogoDiv {\n    display: flex;\n    justify-items: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div > #navLogoDiv > img {\n    content: url("+l+");\n    width: 60px;\n    height: 53px;\n}\n\n#content > #navHeaderDiv > div > h3 {\n    margin-left: auto;\n    align-self: flex-end;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv {\n    margin-left: auto;\n    margin-right: var(--lgPadding);\n    padding: var(--smPadding);\n    align-self: flex-end;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv > * {\n    margin: 0;\n    justify-self: end;\n    cursor: pointer;\n    justify-self: flex-end;\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv > *:hover {\n    animation: invertColorAnimation 0.2s forwards;\n}\n\n@media (max-width:600px) { \n    #content > #navHeaderDiv > h3 {\n        margin-right: var(--lgPadding);\n        text-align: end;\n    }\n\n    #content > #navHeaderDiv > div > #navButtonsDiv {\n        margin-right: var(--medPadding);\n    }\n }","",{version:3,sources:["webpack://./src/css/Pages/nav.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,WAAW;IACX,4BAA4B;IAC5B,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,qCAAqC;IACrC,kDAAkD;IAClD,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,2CAA2C;IAC3C,kBAAkB;IAClB,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;;AAGA;IACI,aAAa;IACb,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA;IACI,gDAAoC;IACpC,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,sCAAsC;AAC1C;;AAEA;IACI,iBAAiB;IACjB,8BAA8B;IAC9B,yBAAyB;IACzB,oBAAoB;IACpB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,6CAA6C;AACjD;;AAEA;IACI;QACI,8BAA8B;QAC9B,eAAe;IACnB;;IAEA;QACI,+BAA+B;IACnC;CACH",sourcesContent:["#content > #navHeaderDiv {\n    /*position: sticky;*/\n    width: 100%;\n    padding: 0 var(--medPadding);\n    color: var(--fontLight);\n    display: flex;\n    flex-direction: column;\n    background-color: var(--accentColor1);\n    border: var(--xSmBorder) solid var(--accentColor3);\n    transition: 0.2s;\n    box-shadow: var(--shadowBox1);\n}\n\n#content > #navHeaderDiv > h3 {\n    margin-bottom: calc(-1 * var(--medPadding));\n    text-align: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div {\n    display: flex;\n    flex-direction: row;\n    align-content: flex-end;\n}\n\n\n#content > #navHeaderDiv > div > #navLogoDiv {\n    display: flex;\n    justify-items: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div > #navLogoDiv > img {\n    content: url(\"/src/images/logo.png\");\n    width: 60px;\n    height: 53px;\n}\n\n#content > #navHeaderDiv > div > h3 {\n    margin-left: auto;\n    align-self: flex-end;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv {\n    margin-left: auto;\n    margin-right: var(--lgPadding);\n    padding: var(--smPadding);\n    align-self: flex-end;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv > * {\n    margin: 0;\n    justify-self: end;\n    cursor: pointer;\n    justify-self: flex-end;\n}\n\n#content > #navHeaderDiv > div > #navButtonsDiv > *:hover {\n    animation: invertColorAnimation 0.2s forwards;\n}\n\n@media (max-width:600px) { \n    #content > #navHeaderDiv > h3 {\n        margin-right: var(--lgPadding);\n        text-align: end;\n    }\n\n    #content > #navHeaderDiv > div > #navButtonsDiv {\n        margin-right: var(--medPadding);\n    }\n }"],sourceRoot:""}]);const m=c},402:(n,e,t)=>{t.d(e,{Z:()=>u});var a=t(537),i=t.n(a),o=t(645),r=t.n(o),A=t(176),s=t(667),d=t.n(s),c=new URL(t(780),t.b),l=r()(i());l.i(A.Z),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap);"]),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]);var m=d()(c);l.push([n.id,"html,\nbody,\nbody > * {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n    font-family: 'Roboto', sans-serif;\n    overflow-x: hidden;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n#background {\n    z-index: -1;\n    position: fixed;\n    background-image: url("+m+");\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    filter:brightness(0.5);\n}\n\n#content > :not(#navHeaderDiv){\n    margin-top: var(--medPadding);\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAIA;;;IAGI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,WAAW;IACX,iCAAiC;IACjC,kBAAkB;AACtB;;AAEA;IACI,qCAAqC;IACrC,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,eAAe;IACf,yDAA6C;IAC7C,4BAA4B;IAC5B,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;AAC1B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;AAChB",sourcesContent:["@import url(\"./Common/global.css\");\n@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nhtml,\nbody,\nbody > * {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n    font-family: 'Roboto', sans-serif;\n    overflow-x: hidden;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n#background {\n    z-index: -1;\n    position: fixed;\n    background-image: url(\"../images/sushi1.jpg\");\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    filter:brightness(0.5);\n}\n\n#content > :not(#navHeaderDiv){\n    margin-top: var(--medPadding);\n    height: 100%;\n}\n"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(r[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);a&&r[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(i," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},r=[],A=0;A<n.length;A++){var s=n[A],d=a.base?s[0]+a.base:s[0],c=o[d]||0,l="".concat(d," ").concat(c);o[d]=c+1;var m=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var C=i(u,a);a.byIndex=A,e.splice(A,0,{identifier:l,updater:C,references:1})}r.push(l)}return r}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=a(n=n||[],i=i||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var A=t(o[r]);e[A].references--}for(var s=a(n,i),d=0;d<o.length;d++){var c=t(o[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,i&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},702:(n,e,t)=>{n.exports=t.p+"6f3a94165f885283310e.png"},780:(n,e,t)=>{n.exports=t.p+"9023b20ea7111025cf65.jpg"}},e={};function t(a){var i=e[a];if(void 0!==i)return i.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),i=t.n(a),o=t(569),r=t.n(o),A=t(565),s=t.n(A),d=t(216),c=t.n(d),l=t(589),m=t.n(l),u=t(402),C={};C.styleTagTransform=m(),C.setAttributes=s(),C.insert=r().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=c(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var p=t(457),v={};v.styleTagTransform=m(),v.setAttributes=s(),v.insert=r().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=c(),e()(p.Z,v),p.Z&&p.Z.locals&&p.Z.locals;var g=t(917),f={};f.styleTagTransform=m(),f.setAttributes=s(),f.insert=r().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=c(),e()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;const B=(()=>{const n=document.createElement("div");let e,t,a;n.id="homeDiv";const i=[e={tag:"h1",id:"topHeader",value:"Hibachi, Sushi, Fun"},t={tag:"h2",id:"middleHeader",value:"Now Accepting Online Orders"},a={tag:"button",id:"orderButton",value:"Order Online"}];for(const e of i){const t=document.createElement(e.tag);t.textContent=e.value,t.id=e.id,n.appendChild(t)}return n})();var h=t(903),b={};b.styleTagTransform=m(),b.setAttributes=s(),b.insert=r().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=c(),e()(h.Z,b),h.Z&&h.Z.locals&&h.Z.locals;const I=(()=>{const n=document.createElement("div"),e={name:"Spicy Garlic Shrimp",price:"7.00",summary:"Cooked in Garlic Chili Spicy Sauce",img:"../src/images/sushi1.jpg"},t=[e,e,e,e],a=[e,e,e,e,e,e,e],i=[e,e,e],o=[e,e,e],r=(n,e)=>{const t=document.createElement("div");t.classList.add("typeDiv");const a=document.createElement("h2");a.textContent=n,a.classList.add("menuTypeHeader"),t.appendChild(a);for(let n=0;n<e.length;n++){const a=e[n],i=document.createElement("div"),o=document.createElement("div"),r=document.createElement("h5"),A=document.createElement("h5"),s=document.createElement("details"),d=document.createElement("summary"),c=document.createElement("img");r.textContent=a.name,A.textContent=a.price,d.textContent=a.summary,c.src=a.img,s.appendChild(d),s.appendChild(c),o.appendChild(r),o.appendChild(A),i.appendChild(o),i.appendChild(s),i.classList.add("foodItemDiv"),o.classList.add("namePriceDiv"),r.classList.add("foodName"),A.classList.add("foodPrice"),d.classList.add("foodDescr"),t.appendChild(i)}return t};return n.id="menuDiv",n.appendChild(r("Apps",t)),n.appendChild(r("Entrees",a)),n.appendChild(r("Sides",i)),n.appendChild(r("Drinks",o)),n})();var x=t(716),y={};y.styleTagTransform=m(),y.setAttributes=s(),y.insert=r().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=c(),e()(x.Z,y),x.Z&&x.Z.locals&&x.Z.locals;const D=(()=>{const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),a=document.createElement("h2"),i=document.createElement("a"),o=document.createElement("img");return n.id="aboutDiv",t.id="mainHeaderWrapper",a.id="mainHeader",a.textContent="What makes us.. us?",o.src="../src/images/sushi0.jpg",i.innerHTML="<img src='../src/images/sushi0.jpg'>",i.innerHTML+="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Aenean euismod elementum nisi quis eleifend quam adipiscing. Aliquam ultrices sagittis orci a scelerisque purus semper eget duis. Nulla aliquet enim tortor at. Id aliquet lectus proin nibh nisl condimentum id venenatis. Pretium viverra suspendisse potenti nullam ac tortor. Lorem ipsum dolor sit amet consectetur adipiscing elit ut aliquam. Arcu dictum varius duis at consectetur. Urna neque viverra justo nec ultrices dui sapien eget mi. Aliquam malesuada bibendum arcu vitae elementum curabitur vitae nunc sed. Ipsum dolor sit amet consectetur adipiscing elit duis tristique. Integer feugiat scelerisque varius morbi. Feugiat scelerisque varius morbi enim nunc. At in tellus integer feugiat. Erat pellentesque adipiscing commodo elit at imperdiet.\n    <br><br>\n    Enim ut tellus elementum sagittis vitae et leo duis ut. Nec dui nunc mattis enim ut tellus elementum. Purus in massa tempor nec feugiat nisl pretium. Aliquam faucibus purus in massa tempor nec feugiat nisl. Bibendum ut tristique et egestas quis. At erat pellentesque adipiscing commodo elit. Varius duis at consectetur lorem donec massa sapien faucibus et. Tortor consequat id porta nibh venenatis cras sed felis. Iaculis urna id volutpat lacus laoreet non. Purus in massa tempor nec feugiat. Enim neque volutpat ac tincidunt. Sit amet dictum sit amet. Vel risus commodo viverra maecenas accumsan lacus. Vitae purus faucibus ornare suspendisse sed. Et leo duis ut diam quam.\n    <br><br>\n    Maecenas accumsan lacus vel facilisis volutpat. Neque egestas congue quisque egestas diam in arcu cursus euismod. Ut porttitor leo a diam sollicitudin tempor id eu nisl. Massa massa ultricies mi quis hendrerit dolor magna eget. Duis ut diam quam nulla porttitor. Lectus sit amet est placerat in egestas erat. Tempor id eu nisl nunc mi ipsum faucibus vitae. Elementum integer enim neque volutpat ac tincidunt vitae semper. Diam ut venenatis tellus in metus vulputate eu scelerisque. Rhoncus dolor purus non enim praesent elementum facilisis leo. Lacus vel facilisis volutpat est velit. Maecenas volutpat blandit aliquam etiam erat velit scelerisque in. Vestibulum lorem sed risus ultricies tristique nulla. Habitant morbi tristique senectus et netus et malesuada fames ac. Mauris pharetra et ultrices neque ornare aenean euismod elementum nisi. Scelerisque eu ultrices vitae auctor eu. Adipiscing vitae proin sagittis nisl rhoncus mattis rhoncus urna neque. Sed adipiscing diam donec adipiscing tristique risus nec feugiat.",t.appendChild(a),e.appendChild(t),e.appendChild(i),n.appendChild(e),n})(),w=(()=>{window.onscroll=()=>{const n=document.querySelector("#navHeaderDiv");document.body.scrollTop>1||document.documentElement.scrollTop>1?n.style.marginTop="-10px":n.style.marginTop="0px"};const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div");n.id="navHeaderDiv",e.id="navLogoDiv",t.id="navButtonsDiv";const a=document.createElement("h2");a.textContent="Edo Hibachi";const i=document.createElement("img"),o=document.createElement("h3");let r,A,s,d;o.textContent="Hibachi, Sushi, Fun";const c=[r={name:"Home",onclick:B},A={name:"Menu",onclick:I},s={name:"About",onclick:D},d={name:"Contact",onclick:"./contact.js"}];for(const n of c){const e=document.createElement("h5");e.textContent=n.name,t.appendChild(e),e.addEventListener("click",(()=>{const e=document.querySelector("#content"),t=e.lastChild;t.classList.add("slideOut"),t.onanimationend=()=>{t.classList.remove("slideOut"),e.removeChild(e.lastChild),e.appendChild(n.onclick),e.lastChild.classList.add("slideIn"),e.lastChild.onanimationend=()=>{e.lastChild.classList.remove("slideIn")}}}))}e.appendChild(i),e.append(a),n.appendChild(o);const l=document.createElement("div");return l.appendChild(e),l.appendChild(t),n.appendChild(l),n})();function E(){void 0===E.bgElement&&(E.bgElement=document.querySelector("#background"),E.filePath="../src/images/"),setTimeout((()=>{E.bgElement.classList.add("fadeOut"),document.querySelector(".fadeOut").onanimationend=()=>{E.bgElement.classList.remove("fadeOut"),E.bgElement.style.backgroundImage=`url("${E.filePath}sushi${k()}.jpg")`,E.bgElement.classList.add("fadeIn"),document.querySelector(".fadeIn").onanimationend=()=>{E.bgElement.classList.remove("fadeIn"),E()}}}),6e3)}function k(){if(void 0===k.backgroundID){const n=2;k.maxImages=5,k.backgroundID=n}else k.backgroundID=(k.backgroundID+1)%k.maxImages+1;return k.backgroundID}function q(){const n=document.querySelector("#content");E(),n.appendChild(w),n.appendChild(B)}window.addEventListener("load",(()=>q()))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,