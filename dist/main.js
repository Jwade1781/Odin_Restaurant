(()=>{"use strict";var n={327:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}","",{version:3,sources:["webpack://./src/css/Common/animations.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,4BAA4B;AAC7B;;AAEA;CACC;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;;CAEA;EACC,wBAAwB;CACzB;;CAEA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC,qCAAqC;CACrC,4BAA4B;AAC7B;;AAEA;CACC;EACC,YAAY;CACb;AACD;;AAEA;CACC,6CAA6C;CAC7C,4BAA4B;AAC7B;;AAEA;CACC;EACC,iBAAiB;CAClB;AACD",sourcesContent:[".wiggle:hover {\n\tanimation: wiggleAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes wiggleAnimation {\n\t0% {\n\t\ttransform: rotate(3deg);\n\t}\n\n\t25% {\n\t\ttransform: rotate(-3deg);\n\t}\n\n\t50% {\n\t\ttransform: rotate(6deg);\n\t}\n\n\t75% {\n\t\ttransform: rotate(-2deg);\n\t}\n\n\t100% {\n\t\ttransform: rotate(0deg);\n\t}\n}\n\n.fillBackground:hover{\n\tanimation: fillBackgroundAnimation 1s;\n\tanimation-iteration-count: 1;\n}\n\n@keyframes fillBackgroundAnimation {\n\t100%{\n\t\topacity: 0.5;\n\t}\n}\n\n.invertColor:hover{\n\tanimation: invertColorAnimation 0.3s forwards;\n\tanimation-iteration-count: 1; \n}\n\n@keyframes invertColorAnimation {\n\t100%{\n\t\tfilter: invert(1);\n\t}\n}"],sourceRoot:""}]);const A=i},20:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}","",{version:3,sources:["webpack://./src/css/Common/commonClasses.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,uCAAuC;IACvC,0CAA0C;IAC1C,0CAA0C;AAC9C;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,qCAAqC;AACzC",sourcesContent:[".frostedGlassBackground {\n    backdrop-filter: blur(20px);\n    background-color: rgba(25, 21, 30, 0.8);\n    box-shadow: 0 1px 12px rgba(0, 0, 0, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.darkHover:hover {\n    opacity: 0.9;\n    cursor: pointer;\n}\n\n.shadowHover:hover {\n    filter: drop-shadow(1px 1px 2px gray);\n}"],sourceRoot:""}]);const A=i},176:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(20),s=t(327),c=t(300),d=i()(r());d.i(A.Z),d.i(s.Z),d.i(c.Z),d.push([n.id,":root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: rgb(54, 55, 64);\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(54, 55, 64);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0,0,0,0.5);\n\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--medRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: --shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px;\n}","",{version:3,sources:["webpack://./src/css/Common/global.css"],names:[],mappings:"AAIA;CACC,iBAAiB;CACjB,iBAAiB;CACjB,kBAAkB;CAClB,iBAAiB;;CAEjB,4BAA4B;;CAE5B,qBAAqB;CACrB,iBAAiB;;CAEjB,+BAA+B;CAC/B,+BAA+B;CAC/B,+BAA+B;CAC/B,+BAA+B;CAC/B,+BAA+B;;CAE/B,8BAA8B;CAC9B,iBAAiB;;CAEjB,eAAe;CACf,sCAAsC;CACtC,sCAAsC;;CAEtC,eAAe;CACf,wCAAwC;CACxC,wCAAwC;CACxC,wCAAwC;;CAExC,kEAAkE;CAClE,8BAA8B;CAC9B,mBAAmB;;CAEnB,qDAAqD;;CAErD,8EAA8E;CAC9E,4FAA4F;AAC7F",sourcesContent:['@import url("commonClasses.css");\n@import url("animations.css");\n@import url("styleReset.css");\n\n:root {\n\t--xSmPadding: 5px;\n\t--smPadding: 10px;\n\t--medPadding: 25px;\n\t--lgPadding: 50px;\n\n\t--mainColor: rgb(54, 55, 64);\n\n\t--lightColor: #f3f3f3;\n\t--darkColor: #222;\n\n\t--accentColor1: rgb(22, 27, 34);\n\t--accentColor2: rgb(85, 85, 85);\n\t--accentColor3: rgb(54, 55, 64);\n\t--accentColor4: rgb(22, 27, 34);\n\t--accentColor5: rgba(0,0,0,0.5);\n\n\t--fontLight: var(--lightColor);\n\t--fontDark: black;\n\n\t--smRound: 10px;\n\t--medRound: calc((var(--smRound) * 2));\n\t--lgRound: calc((var(--medRound) * 2));\n\n\t--smBorder: 1px;\n\t--medBorder: calc((var(--smBorder) * 2));\n\t--lgBorder: calc((var(--medBorder) * 2));\n\t--xlgBorder: calc((var(--lgBorder) * 2));\n\n\t--roundTopBottomRightBorder: 0% var(--medRound) var(--medRound) 0%;\n\t--roundBorder: var(--medRound);\n\t--circleBorder: 50%;\n\n\t--borderHover: var(--lgBorder) solid var(--mainColor);\n\n\t--shadowBox1: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\t--shadowBox2: --shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px;\n}'],sourceRoot:""}]);const l=d},300:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n","",{version:3,sources:["webpack://./src/css/Common/styleReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;CACxB,qBAAqB;AACtB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;;;AAIA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD;;;AAGA;IACI,6CAA6C;AACjD;;AAEA;IACI,iDAAiD;AACrD;;AAEA;IACI,iDAAiD;AACrD",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n\ttext-decoration: none;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n\nh1 {\n    font-size: clamp(4rem, -0.875rem + 2vw, 8rem);\n}\n\nh2 {\n    font-size: clamp(1.4rem, -0.875rem + 2vw, 2.4rem);\n}\n\nh3 {\n    font-size: clamp(1.1rem, -0.875rem + 2vw, 2.1rem);\n}\n\n\nh4 {\n    font-size: clamp(1rem, -0.875rem + 2vw, 2rem);\n}\n\nh5 {\n    font-size: clamp(0.9rem, -0.875rem + 2vw, 1.3rem);\n}\n\nh6 {\n    font-size: clamp(0.7rem, -0.875rem + 2vw, 0.9rem);\n}\n"],sourceRoot:""}]);const A=i},917:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"#content > #homeDiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--accentColor5);\n    color: var(--fontLight);\n    text-align: center;\n}\n\n#content > #homeDiv > * {\n    margin: 0;\n}\n\n#content > #homeDiv > #topHeader {\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n    margin-bottom: var(--lgPadding);\n}\n\n#content > #homeDiv > #orderButton {\n    margin-top: var(--smPadding);\n    border-radius: var(--roundBorder);\n}\n\n#content > #homeDiv > #orderButton:hover{\n    animation: invertColorAnimation 0.3s forwards;\n}","",{version:3,sources:["webpack://./src/css/Pages/home.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,qCAAqC;IACrC,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,sCAAsC;IACtC,8CAA8C;IAC9C,+BAA+B;AACnC;;AAEA;IACI,4BAA4B;IAC5B,iCAAiC;AACrC;;AAEA;IACI,6CAA6C;AACjD",sourcesContent:["#content > #homeDiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--accentColor5);\n    color: var(--fontLight);\n    text-align: center;\n}\n\n#content > #homeDiv > * {\n    margin: 0;\n}\n\n#content > #homeDiv > #topHeader {\n    font-family: 'Kaushan Script', cursive;\n    border-bottom: var(--smBorder) solid orangered;\n    margin-bottom: var(--lgPadding);\n}\n\n#content > #homeDiv > #orderButton {\n    margin-top: var(--smPadding);\n    border-radius: var(--roundBorder);\n}\n\n#content > #homeDiv > #orderButton:hover{\n    animation: invertColorAnimation 0.3s forwards;\n}"],sourceRoot:""}]);const A=i},457:(n,e,t)=>{t.d(e,{Z:()=>C});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(702),t.b),d=i()(r()),l=s()(c);d.push([n.id,"#content > #navHeaderDiv {\n    color: var(--fontLight);\n    display: flex;\n    flex-direction: row;\n    background-color: var(--accentColor2);\n    padding: 0 var(--smPadding);\n    border: var(--smBorder) solid var(--accentColor3);\n}\n\n#content > #navHeaderDiv > #navLogoDiv {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-items: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > #navLogoDiv > img {\n    content: url("+l+");\n    width: 70px;\n    height: 60px;\n}\n\n#content > #navHeaderDiv > h3 {\n    margin-left: auto;\n    align-self: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > #navButtonsDiv {\n    margin-left: auto;\n    margin-right: var(--lgPadding);\n    justify-self: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n}\n\n#content > #navHeaderDiv > #navButtonsDiv > * {\n    justify-self: end;\n    cursor: pointer;\n}\n\n#content > #navHeaderDiv > #navButtonsDiv > *:hover {\n    animation: invertColorAnimation 0.3s forwards;\n}","",{version:3,sources:["webpack://./src/css/Pages/nav.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,2BAA2B;IAC3B,iDAAiD;AACrD;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA;IACI,gDAAoC;IACpC,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,sCAAsC;AAC1C;;AAEA;IACI,iBAAiB;IACjB,8BAA8B;IAC9B,oBAAoB;IACpB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,6CAA6C;AACjD",sourcesContent:["#content > #navHeaderDiv {\n    color: var(--fontLight);\n    display: flex;\n    flex-direction: row;\n    background-color: var(--accentColor2);\n    padding: 0 var(--smPadding);\n    border: var(--smBorder) solid var(--accentColor3);\n}\n\n#content > #navHeaderDiv > #navLogoDiv {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-items: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > #navLogoDiv > img {\n    content: url(\"/src/images/logo.png\");\n    width: 70px;\n    height: 60px;\n}\n\n#content > #navHeaderDiv > h3 {\n    margin-left: auto;\n    align-self: center;\n    font-family: 'Kaushan Script', cursive;\n}\n\n#content > #navHeaderDiv > #navButtonsDiv {\n    margin-left: auto;\n    margin-right: var(--lgPadding);\n    justify-self: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--smPadding);\n}\n\n#content > #navHeaderDiv > #navButtonsDiv > * {\n    justify-self: end;\n    cursor: pointer;\n}\n\n#content > #navHeaderDiv > #navButtonsDiv > *:hover {\n    animation: invertColorAnimation 0.3s forwards;\n}"],sourceRoot:""}]);const C=d},402:(n,e,t)=>{t.d(e,{Z:()=>m});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(176),s=t(667),c=t.n(s),d=new URL(t(780),t.b),l=i()(r());l.i(A.Z),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap);"]);var C=c()(d);l.push([n.id,"html,\nbody,\nbody > * {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    background-image: url("+C+");\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    display: flex;\n    flex-direction: column;\n}\n\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAGA;;;IAGI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,qCAAqC;IACrC,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,yDAA6C;IAC7C,4BAA4B;IAC5B,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,aAAa;IACb,sBAAsB;AAC1B",sourcesContent:["@import url(\"./Common/global.css\");\n@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');\n\nhtml,\nbody,\nbody > * {\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    background-image: url(\"../images/sushi1.jpg\");\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    display: flex;\n    flex-direction: column;\n}\n\n"],sourceRoot:""}]);const m=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},994:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var C=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==C)e[C].references++,e[C].updater(m);else{var u=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=o(n,r),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},702:(n,e,t)=>{n.exports=t.p+"6f3a94165f885283310e.png"},780:(n,e,t)=>{n.exports=t.p+"9023b20ea7111025cf65.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(994),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),d=t.n(c),l=t(589),C=t.n(l),m=t(402),u={};u.styleTagTransform=C(),u.setAttributes=s(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=d(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;var p=t(457),v={};v.styleTagTransform=C(),v.setAttributes=s(),v.insert=i().bind(null,"head"),v.domAPI=r(),v.insertStyleElement=d(),e()(p.Z,v),p.Z&&p.Z.locals&&p.Z.locals;const g=(()=>{console.log("Creating Nav");const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div");n.id="navHeaderDiv",e.id="navLogoDiv",t.id="navButtonsDiv";const o=document.createElement("h2");o.textContent="Edo Hibachi";const r=document.createElement("img"),a=document.createElement("h3");let i,A,s,c;a.textContent="Hibachi, Sushi, Fun";const d=[i={name:"Home",file:"./home.js"},A={name:"Menu",file:"./menu.js"},s={name:"Gallery",file:"./gallery.js"},c={name:"Contact",file:"./contact.js"}];for(const n of d){const e=document.createElement("h5");e.textContent=n.name,t.appendChild(e)}return e.appendChild(r),e.append(o),n.appendChild(e),n.appendChild(a),n.appendChild(t),n})();var f=t(917),B={};B.styleTagTransform=C(),B.setAttributes=s(),B.insert=i().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=d(),e()(f.Z,B),f.Z&&f.Z.locals&&f.Z.locals;const h=(()=>{console.log("Creating Home");const n=document.createElement("div");let e,t,o;n.id="homeDiv";const r=[e={tag:"h1",id:"topHeader",value:"Hibachi, Sushi, Fun"},t={tag:"h2",id:"middleHeader",value:"Now Accepting Online Orders"},o={tag:"button",id:"orderButton",value:"Order Online"}];for(const e of r){const t=document.createElement(e.tag);t.textContent=e.value,t.id=e.id,n.appendChild(t)}return n})();window.addEventListener("load",(()=>function(){const n=document.querySelector("#content");n.appendChild(g),n.appendChild(h)}()))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,